/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import com.github.sarxos.webcam.Webcam;
import com.github.sarxos.webcam.WebcamPanel;
import com.github.sarxos.webcam.WebcamResolution;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.FlowLayout;
import java.awt.Image;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.ComponentAdapter;
import java.awt.event.ComponentEvent;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.util.concurrent.Executor;
import java.util.concurrent.Executors;
import java.util.concurrent.atomic.AtomicBoolean;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.BorderFactory;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JDialog;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPasswordField;
import javax.swing.Timer;
import pst.SenhaPST;
import pst.DadosRetornoPST;

/**
 *
 * @author anderson
 */
public class TelaCameraGUI extends javax.swing.JFrame {

    private TelaInicialCPFGUI telaInicialCPFGUI;

    private Executor executor = Executors.newSingleThreadExecutor();
    private AtomicBoolean initialized = new AtomicBoolean(false);
    private Webcam webcam = null;
    private WebcamPanel panel = null;
    private int statusCamera; //1 - Entra na Tela; 2 - Tira foto e pausa; 3 - Destrava a camera para tira a foto novamente;
    private JDialogFoto dialog = new JDialogFoto(new javax.swing.JFrame(), true, this);

    private BufferedImage princImage;
    
    /**
     * Creates new form TelaCameraGUI
     */
    public TelaCameraGUI(TelaInicialCPFGUI telaInicialCPFGUI) {
        initComponents();
        this.telaInicialCPFGUI = telaInicialCPFGUI;

        setExtendedState(javax.swing.JFrame.MAXIMIZED_BOTH);

        webcam = Webcam.getDefault();
//        webcam.setViewSize(webcam.getViewSizes()[0]);
        webcam.setViewSize(WebcamResolution.VGA.getSize());
        panel = new WebcamPanel(webcam, false);
        panel.setPreferredSize(webcam.getViewSize());
        panel.setOpaque(true);
        panel.setBackground(Color.BLACK);
        panel.setBounds(0, 0, 640, 480);
        jPanelCamera.add(panel);
        if (initialized.compareAndSet(false, true)) {
            executor.execute(new Runnable() {
                @Override
                public void run() {
                    panel.start();
                }
            });
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jButtonFechar = new javax.swing.JButton();
        jButtonCapturarFoto = new javax.swing.JButton();
        jButtonCanc = new javax.swing.JButton();
        jLabelTitulo = new javax.swing.JLabel();
        jLabelMsg = new javax.swing.JLabel();
        jPanelCamera = new javax.swing.JPanel();
        jLabelTitulo2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        setPreferredSize(new java.awt.Dimension(1280, 720));
        setSize(new java.awt.Dimension(1280, 720));
        getContentPane().setLayout(new java.awt.GridBagLayout());

        jButtonFechar.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jButtonFechar.setText("X");
        jButtonFechar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonFecharActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 40;
        gridBagConstraints.ipady = 40;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        getContentPane().add(jButtonFechar, gridBagConstraints);

        jButtonCapturarFoto.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButtonCapturarFoto.setText("CAPTURAR");
        jButtonCapturarFoto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCapturarFotoActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.ipadx = 55;
        gridBagConstraints.ipady = 55;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 5, 0);
        getContentPane().add(jButtonCapturarFoto, gridBagConstraints);

        jButtonCanc.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButtonCanc.setText("Cancelar");
        jButtonCanc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 40;
        gridBagConstraints.ipady = 65;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 0);
        getContentPane().add(jButtonCanc, gridBagConstraints);

        jLabelTitulo.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabelTitulo.setText("AUTOATENDIMENTO");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        getContentPane().add(jLabelTitulo, gridBagConstraints);

        jLabelMsg.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabelMsg.setText("Posicione-se corretamente para a autenticação.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        getContentPane().add(jLabelMsg, gridBagConstraints);

        javax.swing.GroupLayout jPanelCameraLayout = new javax.swing.GroupLayout(jPanelCamera);
        jPanelCamera.setLayout(jPanelCameraLayout);
        jPanelCameraLayout.setHorizontalGroup(
            jPanelCameraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 640, Short.MAX_VALUE)
        );
        jPanelCameraLayout.setVerticalGroup(
            jPanelCameraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 480, Short.MAX_VALUE)
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.ipadx = 640;
        gridBagConstraints.ipady = 480;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 0);
        getContentPane().add(jPanelCamera, gridBagConstraints);

        jLabelTitulo2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabelTitulo2.setText("SISTEMA DE");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(40, 0, 0, 0);
        getContentPane().add(jLabelTitulo2, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonFecharActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonFecharActionPerformed
        // TODO add your handling code here:

        JLabel label = new JLabel("Digite a senha:");
        JPasswordField jpf = new JPasswordField();
        JOptionPane msg = new JOptionPane(new Object[]{label, jpf}, JOptionPane.OK_CANCEL_OPTION);
        JDialog dlg = msg.createDialog("Password");
        dlg.addComponentListener(new ComponentAdapter() {
            @Override
            public void componentShown(ComponentEvent e) {
                super.componentShown(e);
                final Timer t = new Timer(10000, new ActionListener() {
                    @Override
                    public void actionPerformed(ActionEvent e) {
                        dlg.setVisible(false);
                    }
                });
                t.start();
            }
        });
        dlg.setVisible(true);

        String senha = new String(jpf.getPassword());
        SenhaPST senhaPST = new SenhaPST();

        if (senha.equals(senhaPST.retornaSenha())) {
            System.exit(0);
        }

    }//GEN-LAST:event_jButtonFecharActionPerformed

    private void jButtonCancActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancActionPerformed
        // TODO add your handling code here:

        this.telaInicialCPFGUI.limpaCPF();
        this.telaInicialCPFGUI.setVisible(true);
        this.setVisible(false);


    }//GEN-LAST:event_jButtonCancActionPerformed

    private void jButtonCapturarFotoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCapturarFotoActionPerformed
        // TODO add your handling code here:

        try {
            
            statusCamera = 2;
//            panel.pause();
            
            princImage = webcam.getImage();
            
//            ImageIO.write(image, "GIF", new File("K:\\Foto_pre_ordcarreg\\PRD\\" + this.telaInicialCPFGUI.getDadosCarregTO().getIdCarreg() + ".gif"));
//            panel.resume();
            jPanelCamera.removeAll();
            jPanelCamera.add(new JLabel((new ImageIcon(princImage))));

        } catch (Exception ex) {
            Logger.getLogger(getName()).log(Level.SEVERE, null, ex);
        }
        
        dialog.setVisible(true);

    }//GEN-LAST:event_jButtonCapturarFotoActionPerformed

    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(TelaCameraGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(TelaCameraGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(TelaCameraGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(TelaCameraGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new TelaCameraGUI().setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonCanc;
    private javax.swing.JButton jButtonCapturarFoto;
    private javax.swing.JButton jButtonFechar;
    private javax.swing.JLabel jLabelMsg;
    private javax.swing.JLabel jLabelTitulo;
    private javax.swing.JLabel jLabelTitulo2;
    private javax.swing.JPanel jPanelCamera;
    // End of variables declaration//GEN-END:variables

    public int getStatusCamera() {
        return statusCamera;
    }

    public void setStatusCamera(int statusCamera) {
        this.statusCamera = statusCamera;
    }

    public void descartarFoto() {
        statusCamera = 3;
        panel.resume();
        
        jPanelCamera.removeAll();
        jPanelCamera.add(panel);
        
    }

    public JButton getjButtonCapturarFoto() {
        return jButtonCapturarFoto;
    }

    public void salvarFoto() {
        try {
            if (statusCamera == 2) {
                DadosRetornoPST senhaRetornoPST = new DadosRetornoPST();
                if (!this.telaInicialCPFGUI.getDadosCarregTO().getIdProdCarreg().equals("5")) {
                    this.telaInicialCPFGUI.getDadosCarregTO().setIdCliente("0");
                }
                this.telaInicialCPFGUI.setDadosCarregTO(senhaRetornoPST.retDadosCarreg(this.telaInicialCPFGUI.getDadosCarregTO()));

                ImageIO.write(princImage, "GIF", new File("K:\\Foto_pre_ordcarreg\\" + this.telaInicialCPFGUI.getDadosCarregTO().getIdCarreg() + ".gif"));
//                ImageIO.write(image, "GIF", new File("K:\\Foto_pre_ordcarreg\\PRD\\" + this.telaInicialCPFGUI.getDadosCarregTO().getIdCarreg() + ".gif"));
                
                BufferedImage image = webcam.getImage();
                ImageIO.write(image, "GIF", new File("K:\\Foto_pre_ordcarreg\\" + this.telaInicialCPFGUI.getDadosCarregTO().getIdCarreg() + "_01.gif"));
//                ImageIO.write(image, "GIF", new File("K:\\Foto_pre_ordcarreg\\PRD\\" + this.telaInicialCPFGUI.getDadosCarregTO().getIdCarreg() + "_01.gif"));
                panel.resume();
                
                jPanelCamera.removeAll();
                jPanelCamera.add(panel);
                
                this.telaInicialCPFGUI.getTelaImprimirSenhaGUI().setFechaTela(false);
                this.telaInicialCPFGUI.getTelaImprimirSenhaGUI().exibir();
                this.telaInicialCPFGUI.getTelaImprimirSenhaGUI().setVisible(true);
                this.telaInicialCPFGUI.getTelaImprimirSenhaGUI().fechaTela();
                this.setVisible(false);
            } else {
                JOptionPane.showConfirmDialog(null, "Por favor, tire uma foto para averiguação.");
            }
        } catch (Exception ex) {
            Logger.getLogger(getName()).log(Level.SEVERE, null, ex);
        }
    }

}
